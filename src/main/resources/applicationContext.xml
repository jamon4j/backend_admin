<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-3.0.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
            http://www.springframework.org/schema/aop
            http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
            http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd">
	<context:annotation-config />
	<context:component-scan base-package="com.ksyun.vm" />
	<context:component-scan base-package="com.ksyun.payment" />
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<value>classpath:conf.properties</value>
		</property>
	</bean>

	<bean id="dataSource" destroy-method="close"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialSize" value="10" />
		<property name="maxActive" value="100" />
		<property name="maxIdle" value="2" />
		<property name="minIdle" value="1" />
		<!-- testOnBorrow :borrowObject进行处理时，对拿到的connection进行validateObject校验 testOnReturn 
			: returnObject对返回的connection进行validateObject校验，个人觉得对数据库连接池的管理意义不大 testWhileIdle 
			: 关注的重点，GenericObjectPool中针对pool管理，起了一个 异步Evict的TimerTask定时线程进行控制 ( 可通过设置参数 
			timeBetweenEvictionRunsMillis>0), 定时对线程池中的链接进行validateObject校验，对无效的链接进行关闭后，会调用 
			ensureMinIdle，适当建立链接保证最小的minIdle连接数。 timeBetweenEvictionRunsMillis, 设置的Evict线程的时间，单位ms，大于0才会开启evict检查线程 
			validateQuery ， 代表检查的sql validateQueryTimeout ， 代表在执行检查时，通过statement设置， statement.setQueryTimeout(validationQueryTimeout) 
			numTestsPerEvictionRun ，代表每次检查链接的数量，建议设置和maxActive一样大，这样每次可以有效检查所有的链接. -->
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="validationQuery" value="select now()" />
		<property name="validationQueryTimeout" value="1" />
		<property name="timeBetweenEvictionRunsMillis" value="30000" />
		<property name="numTestsPerEvictionRun" value="16" />
		<property name="minEvictableIdleTimeMillis" value="18000000" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="180" />
	</bean>
	<!-- datasource config -->
	<bean id="payDS" class="org.logicalcobwebs.proxool.ProxoolDataSource">
		<property name="alias" value="data1" />
		<property name="driver" value="com.mysql.jdbc.Driver" />
		<property name="driverUrl"
			value="jdbc:mysql://${db1.url}/${db1.name}?useUnicode=true&amp;characterEncoding=utf-8&amp;zeroDateTimeBehavior=convertToNull&amp;transformedBitIsBoolean=true" />
		<property name="user" value="${db1.user}" />
		<property name="password" value="${db1.pwd}" />
		<property name="maximumConnectionCount" value="20" />
	</bean>

	<!-- 多数据源配置 -->
	<bean id="dynamicDataSource" class="com.ksyun.vm.utils.DynamicDataSource">
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<entry value-ref="dataSource" key="dataSource"></entry>
				<entry value-ref="payDS" key="payDS"></entry>
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="dataSource">
		</property>
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="dataSource">
	</bean>
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="modify*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="incr*" propagation="REQUIRED" />
			<tx:method name="merge*" propagation="REQUIRED" />
			<!-- 将save、delete、modify开头的事务之外的事务全部设置 为只读事务，这样也可以在一定程序上提高系统性能 -->
			<tx:method name="get*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="search*" read-only="true" />
			<tx:method name="query*" read-only="true" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>
	<!-- 配置那些类的那些方法参与事务 -->
	<aop:config>
		<!-- <aop:pointcut>标签指的是一个范围 -->
		<aop:pointcut id="allMagangerMethod" expression="execution(* com..service..*(..))" />
		<!-- <aop:advisor>标签相当于Aspect -->
		<aop:advisor pointcut-ref="allMagangerMethod" advice-ref="txAdvice" />
	</aop:config>
	<!-- session config -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="mapperLocations" value="classpath:mappers/**/*.xml" />
	</bean>
	<bean id="sqlSession_batch" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
		<constructor-arg index="1" value="BATCH" />
	</bean>
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

	<bean id="cashSerialIdGenarater"
		class="org.springframework.jdbc.support.incrementer.MySQLMaxValueIncrementer">
		<property name="incrementerName" value="cash_serial_tb" />
		<property name="columnName" value="serial_id" />
		<property name="cacheSize" value="10" />
		<property name="dataSource" ref="payDS" />
	</bean>


	<!-- kpi datasource <tx:annotation-driven transaction-manager="txManager"/> 
		<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"> 
		<property name="dataSource" ref="dataSource_kpi"/> </bean> <bean id="dataSource_kpi" 
		destroy-method="close" class="org.apache.commons.dbcp.BasicDataSource"> <property 
		name="driverClassName" value="${jdbc_kpi.driverClassName}" /> <property name="url" 
		value="${jdbc_kpi.url}" /> <property name="username" value="${jdb_kpi.username}" 
		/> <property name="password" value="${jdbc_kpi.password}" /> <property name="initialSize" 
		value="10" /> <property name="maxActive" value="100" /> <property name="maxIdle" 
		value="2" /> <property name="minIdle" value="1" /> <property name="testWhileIdle" 
		value="true" /> <property name="testOnBorrow" value="false" /> <property 
		name="testOnReturn" value="false" /> <property name="validationQuery" value="select 
		now()" /> <property name="validationQueryTimeout" value="1" /> <property 
		name="timeBetweenEvictionRunsMillis" value="30000" /> <property name="numTestsPerEvictionRun" 
		value="16" /> <property name="minEvictableIdleTimeMillis" value="18000000" 
		/> <property name="removeAbandoned" value="true" /> <property name="removeAbandonedTimeout" 
		value="180" /> </bean> -->
	<rabbit:connection-factory id="connectionFactory"
		host="${jms_server}" port="${jms_port}" />
	<rabbit:template id="amqpTemplate" connection-factory="connectionFactory" />
</beans>